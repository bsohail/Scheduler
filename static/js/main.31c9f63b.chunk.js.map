{"version":3,"sources":["components/scheduleMaker/Scheduler.js","components/about/About.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","root","action","hover","TableRow","createData","time","monday","tuesday","wednesday","thursday","friday","useStyles","makeStyles","table","minWidth","tableRightBorder","borderWidth","borderRightWidth","borderColor","borderStyle","useStyles2","modal","display","alignItems","justifyContent","paper","background","boxShadow","padding","spacing","Scheduler","React","useState","myValue","setValue","openOptions","setOpenOptions","classes","classes2","Container","maxWidth","Paper","elevation","style","marginTop","Grid","container","item","xs","Card","CardContent","Typography","variant","noWrap","textAlign","TextField","id","label","defaultValue","onChange","e","target","value","Button","AppBar","position","Toolbar","justify","Tooltip","title","IconButton","edge","className","menuButton","aria-label","onClick","toString","startTime","moment","h","m","endTime","numberOfDays","scaleUnit","firstDay","day","dayFormat","useModal","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","About","Component","App","href","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31c9f63b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport moment from 'moment';\r\nimport 'react-week-calendar/dist/style.css';\r\nimport WeekCalendar from 'react-week-calendar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 11,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\nfunction createData(time, monday, tuesday, wednesday, thursday, friday) {\r\n  return { time, monday, tuesday, wednesday, thursday, friday };\r\n}\r\n\r\nconst rows = [\r\n  createData('08.00'),\r\n  createData('09.00'),\r\n  createData('10.00'),\r\n  createData('11.00'),\r\n  createData('12.00'),\r\n  createData('13.00'),\r\n  createData('14.00'),\r\n  createData('15.00'),\r\n  createData('16.00'),\r\n  createData('17.00'),\r\n  createData('18.00'),\r\n  createData('19.00'),\r\n  createData('20.00'),\r\n  createData('21.00'),\r\n  createData('22.00'),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n  tableRightBorder: {\r\n        borderWidth: 0,\r\n        borderRightWidth: 1,\r\n        borderColor: 'black',\r\n        borderStyle: 'solid',\r\n    },\r\n\r\n});\r\nconst useStyles2 = makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n\r\n    boxShadow: 'none',\r\n    padding: theme.spacing(2, 4, 3)\r\n  }\r\n}));\r\n\r\nfunction Scheduler () {\r\nconst [myValue, setValue] = React.useState('');\r\n const [openOptions, setOpenOptions] = React.useState(false);\r\n const handleOpenOptions = () => {\r\n    setOpenOptions(true);\r\n  };\r\n\r\n  const handleCloseOptions = () => {\r\n    setOpenOptions(false);\r\n  };\r\n\r\nconst classes = useStyles();\r\nconst classes2 = useStyles2();\r\n    return (\r\n\t<Container maxWidth=\"lg\">\r\n  <Paper elevation={3} style={{marginTop:'50px'}} >\r\n  <Grid container spacing={0}>\r\n    <Grid item xs={2}  >\r\n    <Card style={{display:'flex', justifyContent:'center'}}>\r\n    <CardContent >\r\n    <Typography variant=\"h6\" noWrap style={{textAlign:'center'}}>\r\n      Toolbar\r\n      </Typography>\r\n<br/><br/>\r\n<TextField\r\n          id=\"filled-helperText\"\r\n          label=\"Title\"\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n<br/><br/>\r\n      <Button variant=\"outlined\" color=\"default\" style={{color:'green'}} >Add course</Button>\r\n      <br/><br/>\r\n      <Button variant=\"outlined\" color=\"default\" style={{color:'red'}}>Remove course</Button>\r\n      <br/><br/>\r\n      <Button variant=\"outlined\" color=\"default\" style={{color:'#FFCE00'}} >Backup as JSON</Button>\r\n      <br/><br/>\r\n      <Button variant=\"outlined\" color=\"default\" style={{color:'#FFCE00'}} >Upload JSON</Button>\r\n      <br/><br/>\r\n      <Button variant=\"outlined\" color=\"default\" style={{color:'#005596'}} >Save as JPG</Button>\r\n    </CardContent>\r\n    </Card>\r\n\r\n\r\n      </Grid>\r\n\r\n      <Grid item xs={10}>\r\n<Container maxWidth=\"md\">\r\n<AppBar position=\"static\" style={{backgroundColor:'transparent', boxShadow:'none'}}>\r\n  <Toolbar>\r\n  <Grid\r\n      justify=\"space-between\" // Add it here :)\r\n      container\r\n      spacing={24}\r\n    >\r\n    <Grid item />\r\n\r\n      <Grid item>\r\n<Tooltip title=\"Options\">\r\n    <IconButton edge=\"start\" className={classes.menuButton} color=\"black\" aria-label=\"menu\" onClick={handleOpenOptions}>\r\n      <MoreVertIcon />\r\n    </IconButton>\r\n</Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  </Toolbar>\r\n</AppBar>\r\n<Card>\r\n<CardContent >\r\n<Typography variant=\"h6\" noWrap style={{textAlign:'center'}} >\r\n  {myValue.toString()}\r\n</Typography>\r\n\r\n  <WeekCalendar\r\n      startTime = {moment({h: 8, m: 0})}\r\n      endTime = {moment({h: 22, m: 1})}\r\n      numberOfDays= {5}\r\n      scaleUnit={60}\r\n      firstDay={moment().day(1)}\r\n      dayFormat={'ddd'}\r\n      useModal={false}\r\n      //selectedIntervals = {this.state.selectedIntervals}\r\n      //onIntervalSelect = {this.handleSelect}\r\n    //  onIntervalUpdate = {this.handleEventUpdate}\r\n      //onIntervalRemove = {this.handleEventRemove}\r\n    />\r\n    </CardContent>\r\n    </Card>\r\n    </Container>\r\n    </Grid>\r\n    </Grid>\r\n    <Modal\r\n\r\n          className={classes2.modal}\r\n          open={openOptions}\r\n          onClose={handleCloseOptions}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500\r\n          }}\r\n        >\r\n          <Fade in={openOptions}>\r\n            <div className={classes2.paper}>\r\n              <h2 >Options</h2>\r\n              <p >\r\n                theme options and 5/7 days option go here.\r\n              </p>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n    </Paper>\r\n\r\n    <br/>\r\n    <h5 style={{textAlign:'center'}}>Nitin Ramesh, Bilal Sohail 2020</h5>\r\n\t</Container>\r\n\r\n    );\r\n  }\r\n\r\n\r\nexport default Scheduler;\r\n","import React from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n\t<Container maxWidth=\"md\">\r\n      <h2>\r\n        About page\r\n      </h2>\r\n      <br/>\r\n      <h4>React: MIT license</h4>\r\n      <h4>Material UI: MIT license</h4>\r\n      <h4>React-weekly-calender: MIT license </h4>\r\n\t</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Scheduler from './components/scheduleMaker/Scheduler';\nimport About from './components/about/About';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nexport default function App() {\n  return (\n    <Router>\n      <div>\n\t<AppBar position=\"static\" style={{backgroundColor:'#005596'}}>\n        <Toolbar>\n\t<Grid\n      justify=\"space-between\"\n      container\n      spacing={24}\n    >\n\t<Grid item>\n          <Typography variant=\"h6\" noWrap>\n            Generic Uni logo\n          </Typography>\n\t</Grid>\n\t<Grid item>\n\t\t<Button variant=\"outlined\" color=\"default\" style={{color:'#FFCE00'}} href=\"/\">Schedule maker</Button>\n\t\t<Button variant=\"outlined\" color=\"default\" style={{color:'#FFCE00'}} href=\"/about\">About</Button>\n\t</Grid>\n\t</Grid>\n        </Toolbar>\n      </AppBar>\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Scheduler />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}